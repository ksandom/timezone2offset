#!/bin/bash
# Add an estimated time to data provided by tz2t.
# Syntax:
#   $0 [timeOverrideOrOptions]
#
# timeOverride specifies your local time. Eg:
#   What will the time be in NZDT at 12:34?
#     tz2o nzdt | o2t 12:34
#
# It's completely fine to not specify a time. Eg:
#   What time is it in NZDT right now?
#     tz2o nzdt | o2t
#   Or more simply:
#     tz2t nzdt

function applyOffset
{
    if [ "$1" == "" ]; then
        echo "$myTime"
    elif [ "${1:0:3}" == 'Â±00' ]; then
        echo "$myTime"
    else
        # This is overly simplistic and doesn't take minutes into account.
        itemDirection="${1:0:1}"
        hourOffset="$(echo "${1:0:3}" | sed 's/-0/-/g;s/+0/+/g')"
        minuteOffset="${1:3:2}"

        # Calculate the approximate time.
        utcHour="$(($myTHour - $myODirection$myOHour))"
        itemHour="$(($utcHour + $hourOffset))"

        # Apply the bounds.
        note=""
        finalHour=$itemHour
        if [ "$itemHour" -gt 23 ]; then
            note=" tomorrow"
            finalHour="$(($itemHour - 24))"
        fi

        if [ "$itemHour" -lt 0 ]; then
            note=" yesterday"
            finalHour="$(($itemHour + 24))"
        fi

        # Format it for 24 hour time.
        if [ "$finalHour" -lt 10 ]; then
            formattedHour="0$finalHour"
        else
            formattedHour="$finalHour"
        fi

        ## Warn if there are minutes in the timezone, because these are currently not taken into account.
        minuteWarning=""
        if [ "$minuteOffset" != '' ]; then
            minuteWarning="*"
        fi

        minutePrefix=""
        [ "${myTMinute:1:1}" == '' ] && minutePrefix='0'

        echo "$formattedHour:$minutePrefix$myTMinute$minuteWarning$note"
    fi
}

function processInput
{
    read -r firstLine
    echo "$firstLine,Approx time"

    while read -r line; do
        offset="$(echo "$line" | cut -d, -f1 | sed 's/UTC//g')"
        echo "$line,$(applyOffset "$offset")"
    done
}

function normalFlow
{
    myOffset="$(date +%z)"
    myODirection="${myOffset:0:1}"
    myOHour="${myOffset:1:2}"
    myOMinute="${myOffset:3:2}"

    if [ "$1" == '' ]; then
        myTime="$(date +%H:%M)"
    else
        myTime="$1"
    fi

    myTHour="$(echo "$myTime" | cut -d: -f1)"
    [ "${myTHour:0:1}" == '0' ] && myTHour="${myTHour:1:1}"
    myTMinute="$(echo "$myTime" | cut -d: -f2)"
    [ "${myTMinute:0:1}" == '0' ] && myTMinute="${myTMinute:1:1}"

    if [ -t 1 ]; then
        srcDir="$(dirname "$0")"
        processInput | "$srcDir"/tz2o reformat
    else
        processInput
    fi
}

function showHelp
{
    startFrom=1
    if [ "$1" == '--noHeader' ]; then
        startFrom=2
    fi

    # Show the internal documentation.
    {
        grep -B1000 '## End of internal documentation. ##' "$0" |
            grep '^#' |
            grep -v '^#!' |
            grep -v '##' |
            cut -b3-
    } | sed 's/\$0/'"$(basename "$0")"'/g' | tail -n+"$startFrom"

    # Show the options available.
    echo -e "\nOptions:"
    {
        grep -A1000 '## Options begin #[#]' $0 |
            grep ') [#]'
    } | sed 's/^ *"//g; s/") # /'"\t"'/g; s/.*\*) # /*timezone\/offset*'"\t"'/g' | createTable
}

function createTable
{
    column -t -s"$(echo -e "\t")"
}

## Options begin ##
case "$1" in
    "--help") # Show this help.
        showHelp
    ;;
    *)
        normalFlow "$1"
    ;;
esac
